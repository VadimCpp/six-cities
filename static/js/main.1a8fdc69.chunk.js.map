{"version":3,"sources":["store/action.js","store/offers-data/offers-data.js","const.js","store/cities-data/cities-data.js","store/user-data/user-data.js","store/root-reducer.js","browser-history.js","store/middlewares/redirect.js","utils/offerAdapter.js","store/api-actions.js","store/cities-data/selector.js","store/offers-data/selector.js","store/user-data/selector.js","components/header/header.jsx","types/location.prop.js","types/city.prop.js","types/user.prop.js","types/review.prop.js","types/reviews.prop.js","types/offer.prop.js","types/offers.prop.js","components/offer/offer.jsx","components/offers/offers.jsx","components/cities-map/cities-map.jsx","components/cities/cities.jsx","components/sorting/sorting.jsx","components/spinner/spinner.jsx","components/main-screen/main-screen.jsx","components/login-screen/login-screen.jsx","utils/groupByCities.js","components/favorites-list/favorites-list.jsx","components/footer/footer.jsx","components/favorites-screen/favorites-screen.jsx","utils/getVerboseType.js","utils/getVerboseDate.js","components/review/review.jsx","components/review-star/review-star.jsx","components/rating/rating.jsx","components/review-form/review-form.jsx","components/reviews/reviews.jsx","components/host/host.jsx","components/room/room.jsx","components/room-screen/room-screen.jsx","components/not-found-screen/not-found-screen.jsx","components/private-route/private-route.jsx","components/app/app.jsx","services/api.js","index.js"],"names":["ActionType","setCity","createAction","requireAuthorization","loadOffers","redirectToRoute","setUser","logout","updateOffer","offersData","createReducer","offers","isDataLoaded","builder","addCase","state","action","payload","offerId","offer","id","AppRoute","CITIES","Paris","Cologne","Brussels","Amsterdam","Hamburg","Dusseldorf","SortingTypes","POPULAR","LOW_TO_HIGH","HIGH_TO_LOW","TOP_RATED","AuthorizationStatus","initialState","city","name","citiesData","authorizationStatus","user","userData","NameSpace","combineReducers","browserHistory","createBrowserHistory","redirect","_store","next","type","push","OfferAdapter","getOffer","preview","maxAdults","isPremium","isFavorite","host","avatarUrl","isPro","getOffers","reduce","acc","console","log","updateFavoriteStatus","status","dispatch","_getState","api","getCity","getIsDataLoaded","getOffersForCity","createSelector","Object","values","filter","o","getUser","getAuthorizationStatus","Header","useSelector","useDispatch","className","to","src","alt","width","height","email","style","cursor","onClick","evt","preventDefault","logUserOut","PropTypes","shape","latitude","number","isRequired","longitude","zoom","string","location","locationProp","bool","comment","date","rating","userProp","arrayOf","reviewProp","price","title","cityProp","description","goods","bedrooms","images","nearby","reviews","reviewsProp","offerProp","Offer","props","onMouseEnter","onMouseLeave","placeCardClass","imageWrapperClass","placeCardInfoClass","imgWidth","imgHeight","generatePath","maxHeight","minHeight","objectFit","xlinkHref","Offers","placesListClass","onActiveOfferSet","map","React","memo","ICON","leaflet","icon","iconUrl","iconSize","ICON_ACTIVE","CitiesMap","activeOfferId","useRef","mapRef","markers","useEffect","current","center","zoomControl","marker","scrollWheelZoom","disable","tileLayer","attribution","addTo","setView","remove","forEach","coords","markerLayer","setIcon","ref","data-testid","cities","Cities","c","types","Sorting","onSortingChange","useState","visible","setVisible","aType","idx","tabIndex","Spinner","MainScreen","theOffersForCity","sortType","setSortType","setActiveOfferId","offersForCity","useMemo","offersForCityArray","sort","a","b","length","LoginScreen","loginRef","passwordRef","isError","setIsError","onSubmit","value","trim","login","password","alert","placeholder","color","groupByCities","find","FavoritesList","Footer","FavoritesScreen","getVerboseType","MONTH_NAMES","getVerboseDate","dateString","aDate","Date","getMonth","getFullYear","Review","review","dateTime","ReviewStar","stars","onRatingChange","isChecked","checked","onChange","htmlFor","Rating","ReviewForm","setComment","setRating","isPostingComment","setIsPostingComment","isSubmitAvailable","event","undefined","then","Number","currentTarget","target","disabled","Reviews","Host","Room","sortedReviews","slice","image","good","RoomScreen","useParams","nearbyOffers","nearbyId","Array","isArray","NotFoundScreen","PrivateRoute","render","path","exact","routeProps","App","component","HttpCode","store","onUnauthorized","axios","create","baseURL","timeout","header","transformRequest","data","headers","localStorage","getItem","interceptors","response","use","err","createAPI","configureStore","reducer","rootReducer","middleware","getDefaultMiddleware","thunk","extraArgument","concat","mockOffers","ReactDOM","StrictMode","history","document","getElementById"],"mappings":"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","file":"static/js/main.1a8fdc69.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const ActionType = {\n  SET_CITY: 'main/setCity',\n  REDIRECT_TO_ROUTE: 'main/redirectToRoute',\n  REQUIRED_AUTHORIZATION: 'user/requiredAuthorization',\n  LOAD_OFFERS: 'data/loadOffers',\n  SET_USER: 'user/setUser',\n  LOGOUT: 'user/logout',\n  UPDATE_OFFER: 'data/updateOffer',\n};\n\nexport const setCity = createAction(ActionType.SET_CITY);\nexport const requireAuthorization = createAction(ActionType.REQUIRED_AUTHORIZATION);\nexport const loadOffers = createAction(ActionType.LOAD_OFFERS);\nexport const redirectToRoute = createAction(ActionType.REDIRECT_TO_ROUTE);\nexport const setUser = createAction(ActionType.SET_USER);\nexport const logout = createAction(ActionType.LOGOUT);\nexport const updateOffer = createAction(ActionType.UPDATE_OFFER);\n","\nimport { createReducer } from '@reduxjs/toolkit';\nimport { loadOffers, updateOffer } from '../action';\n\nconst initialState = {\n  offers: {},\n  isDataLoaded: false,\n};\n\nconst offersData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(loadOffers, (state, action) => {\n      state.offers = action.payload;\n      state.isDataLoaded = true;\n    })\n    .addCase(updateOffer, (state, action) => {\n      const offerId = action.payload?.offer?.id;\n      if (offerId) {\n        state.offers = {\n          ...state.offers,\n          [offerId]: {\n            ...state.offers[offerId],\n            ...action.payload.offer,\n          },\n        };\n      }\n    });\n});\n\nexport { offersData };\n","\nexport const AppRoute = {\n  ROOT: '/six-cities/',\n  LOGIN: '/six-cities/login',\n  FAVORITES: '/six-cities/favorites',\n  ROOM: '/six-cities/offer/:id',\n  NOT_FOUND: '/six-cities/404',\n};\n\nexport const RATING_TO_PERCENT = 20; // same as / 5 * 100\n\nexport const CITIES = {\n  Paris: {\n    'name': 'Paris',\n    'location': {\n      'latitude': 48.85661,\n      'longitude': 2.351499,\n      'zoom': 13,\n    },\n  },\n  Cologne: {\n    'name': 'Cologne',\n    'location': {\n      'latitude': 50.938361,\n      'longitude': 6.959974,\n      'zoom': 13,\n    },\n  },\n  Brussels: {\n    'name': 'Brussels',\n    'location': {\n      'latitude': 50.846557,\n      'longitude': 4.351697,\n      'zoom': 13,\n    },\n  },\n  Amsterdam: {\n    'name': 'Amsterdam',\n    'location': {\n      'latitude': 52.37454,\n      'longitude': 4.897976,\n      'zoom': 13,\n    },\n  },\n  Hamburg: {\n    'name': 'Hamburg',\n    'location': {\n      'latitude': 53.550341,\n      'longitude': 10.000654,\n      'zoom': 13,\n    },\n  },\n  Dusseldorf: {\n    'name': 'Dusseldorf',\n    'location': {\n      'latitude': 51.225402,\n      'longitude': 6.776314,\n      'zoom': 13,\n    },\n  },\n};\n\nexport const SortingTypes = {\n  POPULAR: 'Popular',\n  LOW_TO_HIGH: 'Price: low to high',\n  HIGH_TO_LOW: 'Price: high to low',\n  TOP_RATED: 'Top rated first',\n};\n\nexport const AuthorizationStatus = {\n  AUTH: 'AUTH',\n  NO_AUTH: 'NO_AUTH',\n  UNKNOWN: 'UNKNOWN',\n};\n\nexport const APIRoute = {\n  OFFERS: '/hotels',\n  OFFER: '/hotels/:id',\n  NEARBY: '/hotels/:id/nearby',\n  LOGIN: '/login',\n  LOGOUT: '/logout',\n  COMMENTS: '/comments/:id',\n  FAVORITE: '/favorite',\n  FAVORITE_STATUS: '/favorite/:id/:status',\n};\n\nexport const DEFAULT_IMG_WIDTH = '260';\nexport const DEFAULT_IMG_HEIGHT = '200';\n","\nimport { createReducer } from '@reduxjs/toolkit';\nimport { setCity } from '../action';\nimport { CITIES } from '../../const';\n\nconst initialState = {\n  city: CITIES['Paris'].name,\n};\n\nconst citiesData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(setCity, (state, action) => {\n      state.city = action.payload;\n    });\n});\n\nexport { citiesData };\n","\nimport { createReducer } from '@reduxjs/toolkit';\nimport { requireAuthorization, logout, setUser } from '../action';\nimport { AuthorizationStatus } from '../../const';\n\nconst initialState = {\n  authorizationStatus: AuthorizationStatus.UNKNOWN,\n  user: null,\n};\n\nconst userData = createReducer(initialState, (builder) => {\n  builder\n    .addCase(requireAuthorization, (state, action) => {\n      state.authorizationStatus = action.payload;\n    })\n    .addCase(logout, (state) => {\n      state.authorizationStatus = AuthorizationStatus.NO_AUTH;\n    })\n    .addCase(setUser, (state, action) => {\n      state.user = action.payload;\n    });\n});\n\nexport { userData };\n","import { combineReducers } from 'redux';\nimport { offersData } from './offers-data/offers-data';\nimport { citiesData } from './cities-data/cities-data';\nimport { userData } from './user-data/user-data';\n\nexport const NameSpace = {\n  OFFERS: 'OFFERS',\n  CITIES: 'CITIES',\n  USER: 'USER',\n};\n\nexport default combineReducers({\n  [NameSpace.OFFERS]: offersData,\n  [NameSpace.CITIES]: citiesData,\n  [NameSpace.USER]: userData,\n});\n","import {createBrowserHistory} from 'history';\n\nconst browserHistory = createBrowserHistory();\n\nexport default browserHistory;\n","import browserHistory from '../../browser-history';\nimport { ActionType } from '../action';\n\nexport const redirect = (_store) => (next) => (action) => {\n  if (action.type === ActionType.REDIRECT_TO_ROUTE) {\n    browserHistory.push(action.payload);\n  }\n\n  return next(action);\n};\n","const OfferAdapter = {\n  getOffer: (offer) => ({\n    ...offer,\n    preview: offer['preview_image'] || offer['preview'],\n    maxAdults: offer['max_adults'] || offer['maxAdults'],\n    isPremium: offer['is_premium'] || offer['isPremium'],\n    isFavorite: offer['is_favorite'] || offer['isFavorite'],\n    host: {\n      ...offer.host,\n      avatarUrl: offer['host']['avatar_url'] || offer['host']['avatarUrl'],\n      isPro: offer['host']['is_pro'] || offer['host']['isPro'],\n    },\n  }),\n  getOffers: (offers) => offers.reduce((acc, offer) => {\n    acc[offer.id] = OfferAdapter.getOffer(offer);\n    return acc;\n  }, {}),\n};\n\nexport default OfferAdapter;\n","import { generatePath } from 'react-router-dom';\nimport {\n  loadOffers,\n  updateOffer,\n  redirectToRoute,\n  setUser,\n  requireAuthorization,\n  logout as logUserOut\n} from './action';\nimport { AuthorizationStatus, APIRoute, AppRoute } from '../const';\nimport OfferAdapter from '../utils/offerAdapter';\nimport UserAdapter from '../utils/userAdapter';\nimport ReviewAdapter from '../utils/reviewAdapter';\n\nimport mockOffers from '../mocks/offers.json';\n\n//\n// NOTE!\n// Никогда не знаешь, когда умрет обучающий сервер HTML академии:\n// const BACKEND_URL = 'https://7.react.pages.academy/six-cities';\n//\n// Необходимо позаботиться о том, чтобы исходники показывали тестовые данные.\n// Для этого добавлена переменная DEBUG.\n//\n// Установить DEBUG = true для использования тестовых данных (сервер не нужен)\n// Установить DEBUG = false для обычной работы с сервером\n//\nconst DEBUG = true;\n\nif (DEBUG) {\n  // eslint-disable-next-line no-console\n  console.log('Development mode. Backend is mocked.');\n}\n\nexport const fetchOfferList = () => (dispatch, _getState, api) => {\n  if (DEBUG) {\n    return dispatch(loadOffers(OfferAdapter.getOffers(mockOffers)));\n  } else {\n    return api.get(APIRoute.OFFERS)\n      .then(({data}) => dispatch(loadOffers(OfferAdapter.getOffers(data))));\n  }\n};\n\nexport const fetchOfferData = (id) => (dispatch, _getState, api) => {\n  if (DEBUG) {\n    return dispatch(updateOffer(undefined));\n  } else {\n    return Promise.all([\n      api.get(generatePath(APIRoute.OFFER, {id})),\n      api.get(generatePath(APIRoute.NEARBY, {id})),\n      api.get(generatePath(APIRoute.COMMENTS, {id}))],\n    )\n      .then((values) =>\n        // Promise.all: Order of resolved values?\n        // Shortly, the order is preserved.\n        // https://stackoverflow.com/q/28066429/1775459\n        dispatch(updateOffer({\n          offer: {\n            ...OfferAdapter.getOffer(values[0].data),\n            nearby: values[1].data.map((o) => o.id),\n            reviews: ReviewAdapter.getReviews(values[2].data),\n          },\n        })))\n      .catch(() => dispatch(redirectToRoute(AppRoute.NOT_FOUND)));\n  }\n};\n\nexport const checkAuth = () => (dispatch, _getState, api) => {\n  if (DEBUG) {\n    return dispatch(requireAuthorization(AuthorizationStatus.NO_AUTH));\n  } else {\n    return api.get(APIRoute.LOGIN)\n      .then(({data}) => dispatch(setUser(UserAdapter.getUser(data))))\n      .then(() => dispatch(requireAuthorization(AuthorizationStatus.AUTH)))\n      .catch(() => dispatch(setUser(null)));\n  }\n};\n\nexport const login = ({login: email, password}) => (dispatch, _getState, api) => {\n  if (DEBUG) {\n    // eslint-disable-next-line no-alert\n    alert('Ошибка! В режиме использования тестовых данных логин не работает');\n    return dispatch(requireAuthorization(AuthorizationStatus.NO_AUTH));\n  } else {\n    return api.post(APIRoute.LOGIN, {email, password})\n      .then(({data}) => {\n        localStorage.setItem('token', data.token);\n        dispatch(setUser(UserAdapter.getUser(data)));\n      })\n      .then(() => dispatch(requireAuthorization(AuthorizationStatus.AUTH)));\n  }\n};\n\nexport const logout = () => (dispatch, _getState, api) => {\n  if (DEBUG) {\n    return dispatch(logUserOut());\n  } else {\n    api.delete(APIRoute.LOGOUT)\n      .then(() => localStorage.removeItem('token'))\n      .then(() => dispatch(logUserOut()));\n  }\n};\n\nexport const postComment = ({ id, comment, rating }) => (dispatch, _getState, api) => {\n  if (DEBUG) {\n    return dispatch(updateOffer(undefined));\n  } else {\n    return api.post(generatePath(APIRoute.COMMENTS, {id}), {comment, rating})\n      .then(({data}) =>\n        dispatch(updateOffer({\n          offer: {\n            id,\n            reviews: ReviewAdapter.getReviews(data),\n          },\n        })));\n  }\n};\n\nexport const updateFavoriteStatus = ({ id, status }) => (dispatch, _getState, api) => {\n  if (DEBUG) {\n    return dispatch(redirectToRoute(AppRoute.LOGIN));\n  } else {\n    return api.post(generatePath(APIRoute.FAVORITE_STATUS, {id, status}))\n      .then(({data}) =>\n        dispatch(updateOffer({\n          offer: OfferAdapter.getOffer(data),\n        })))\n      .catch(() => dispatch(redirectToRoute(AppRoute.LOGIN)));\n  }\n};\n\n","import { NameSpace } from '../root-reducer';\n\nexport const getCity = (state) => state[NameSpace.CITIES].city;\n","import { createSelector } from 'reselect';\nimport { NameSpace } from '../root-reducer';\nimport { getCity } from '../cities-data/selector';\n\nexport const getOffers = (state) => state[NameSpace.OFFERS].offers;\nexport const getIsDataLoaded = (state) => state[NameSpace.OFFERS].isDataLoaded;\n\nexport const getOffersForCity = createSelector(\n  getOffers,\n  getCity,\n  (offers, city) => Object.values(offers).filter((o) => o.city.name === city),\n);\n","import { NameSpace } from '../root-reducer';\n\nexport const getUser = (state) => state[NameSpace.USER].user;\nexport const getAuthorizationStatus = (state) => state[NameSpace.USER].authorizationStatus;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { logout } from '../../store/api-actions';\nimport { getAuthorizationStatus, getUser } from '../../store/user-data/selector';\n\nfunction Header() {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const user = useSelector(getUser);\n  const dispatch = useDispatch();\n\n  return (\n    <header className=\"header\">\n      <div className=\"container\">\n        <div className=\"header__wrapper\">\n          <div className=\"header__left\">\n            <Link className=\"header__logo-link header__logo-link--active\" to={AppRoute.ROOT}>\n              <img className=\"header__logo\" src=\"https://vadimcpp.github.io/six-cities/img/logo.svg\" alt=\"6 cities logo\" width=\"81\" height=\"41\" />\n            </Link>\n          </div>\n          <nav className=\"header__nav\">\n            <ul className=\"header__nav-list\">\n              { authorizationStatus === AuthorizationStatus.AUTH && user ? (\n                <>\n                  <li className=\"header__nav-item user\">\n                    <Link className=\"header__nav-link header__nav-link--profile\" to={AppRoute.FAVORITES}>\n                      <div className=\"header__avatar-wrapper user__avatar-wrapper\">\n                        <img className=\"header__avatar user__avatar\" src={user.avatarUrl} width=\"54\" height=\"54\" alt={user.name} />\n                      </div>\n                      <span className=\"header__user-name user__name\">{user.email}</span>\n                    </Link>\n                  </li>\n                  <li className=\"header__nav-item\">\n                    <span\n                      className=\"header__nav-link\"\n                      style={{ cursor: 'pointer' }}\n                      onClick={(evt) => {\n                        evt.preventDefault();\n                        dispatch(logout());\n                      }}\n                    >\n                      <span className=\"header__signout\">Sign out</span>\n                    </span>\n                  </li>\n                </>\n              ) : (\n                <li className=\"header__nav-item user\">\n                  <Link\n                    className=\"header__nav-link header__nav-link--profile\"\n                    to={AppRoute.LOGIN}\n                  >\n                    <div className=\"header__avatar-wrapper user__avatar-wrapper\">\n                    </div>\n                    <span className=\"header__login\">Sign in</span>\n                  </Link>\n                </li>\n              )}\n            </ul>\n          </nav>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport { Header };\nexport default Header;\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  latitude: PropTypes.number.isRequired,\n  longitude: PropTypes.number.isRequired,\n  zoom: PropTypes.number.isRequired,\n});\n","import PropTypes from 'prop-types';\nimport locationProp from './location.prop';\n\nexport default PropTypes.shape({\n  name: PropTypes.string.isRequired,\n  location: locationProp.isRequired,\n});\n","import PropTypes from 'prop-types';\n\nexport default PropTypes.shape({\n  avatarUrl: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  isPro: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string,\n});\n","import PropTypes from 'prop-types';\nimport userProp from './user.prop';\n\nexport default PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  comment: PropTypes.string.isRequired,\n  date: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  user: userProp.isRequired,\n});\n","import PropTypes from 'prop-types';\nimport reviewProp from './review.prop';\n\nexport default PropTypes.arrayOf(reviewProp);\n","import PropTypes from 'prop-types';\nimport cityProp from './city.prop';\nimport locationProp from './location.prop';\nimport userProp from './user.prop';\nimport reviewsProp from './reviews.prop';\n\nexport default PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  preview: PropTypes.string.isRequired,\n  price: PropTypes.number.isRequired,\n  rating: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  city: cityProp.isRequired,\n  host: userProp.isRequired,\n  description: PropTypes.string.isRequired,\n  goods: PropTypes.arrayOf(PropTypes.string.isRequired),\n  bedrooms: PropTypes.number.isRequired,\n  maxAdults: PropTypes.number.isRequired,\n  images: PropTypes.arrayOf(PropTypes.string.isRequired),\n  isPremium: PropTypes.bool.isRequired,\n  location: locationProp.isRequired,\n  nearby: PropTypes.arrayOf(PropTypes.number.isRequired),\n  reviews: reviewsProp,\n});\n","import PropTypes from 'prop-types';\nimport offerProp from './offer.prop';\n\nexport default PropTypes.arrayOf(offerProp);\n","import React from 'react';\nimport { Link, generatePath } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { AppRoute, RATING_TO_PERCENT, DEFAULT_IMG_WIDTH, DEFAULT_IMG_HEIGHT } from '../../const';\nimport offerProp from '../../types/offer.prop';\nimport { updateFavoriteStatus } from '../../store/api-actions';\n\nfunction Offer(props) {\n  const {\n    offer,\n    onMouseEnter,\n    onMouseLeave,\n    placeCardClass = '',\n    imageWrapperClass = '',\n    placeCardInfoClass = '',\n    imgWidth = DEFAULT_IMG_WIDTH,\n    imgHeight = DEFAULT_IMG_HEIGHT,\n  } = props;\n  const {id, preview, price, rating, title, type, isPremium} = offer;\n  const dispatch = useDispatch();\n\n  function handleFavoriteClick() {\n    dispatch(updateFavoriteStatus({ id, status: offer.isFavorite ? 0 : 1 }));\n  }\n\n  return (\n    <article\n      className={`${placeCardClass} place-card`}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n    >\n      {isPremium && (\n        <div className=\"place-card__mark\">\n          <span>Premium</span>\n        </div>\n      )}\n      <div className={`${imageWrapperClass} place-card__image-wrapper`}>\n        <Link to={generatePath(AppRoute.ROOM, { id })}>\n          <img\n            className=\"place-card__image\"\n            src={preview}\n            width={imgWidth}\n            height={imgHeight}\n            alt=\"Place\"\n            style={{\n              maxHeight: `${imgHeight}px`,\n              minHeight: `${imgHeight}px`,\n              objectFit: 'cover',\n            }}\n          />\n        </Link>\n      </div>\n      <div className={`${placeCardInfoClass} place-card__info`}>\n        <div className=\"place-card__price-wrapper\">\n          <div className=\"place-card__price\">\n            <b className=\"place-card__price-value\">&euro;{price}</b>\n            <span className=\"place-card__price-text\">&#47;&nbsp;night</span>\n          </div>\n          <button\n            className={`place-card__bookmark-button ${offer.isFavorite ? 'place-card__bookmark-button--active' : ''} button`}\n            type=\"button\"\n            onClick={handleFavoriteClick}\n          >\n            <svg className=\"place-card__bookmark-icon\" width=\"18\" height=\"19\">\n              <use xlinkHref=\"#icon-bookmark\"></use>\n            </svg>\n            <span className=\"visually-hidden\">${offer.isFavorite ? 'From' : 'To '} bookmarks</span>\n          </button>\n        </div>\n        <div className=\"place-card__rating rating\">\n          <div className=\"place-card__stars rating__stars\">\n            <span style={{ width: `${rating * RATING_TO_PERCENT}%` }}></span>\n            <span className=\"visually-hidden\">Rating {rating}</span>\n          </div>\n        </div>\n        <h2 className=\"place-card__name\">\n          <Link to={generatePath(AppRoute.ROOM, { id })}>{title}</Link>\n        </h2>\n        <p className=\"place-card__type\">{type}</p>\n      </div>\n    </article>\n  );\n}\n\nOffer.propTypes = {\n  offer: offerProp.isRequired,\n  onMouseEnter: PropTypes.func,\n  onMouseLeave: PropTypes.func,\n  placeCardClass: PropTypes.string,\n  imageWrapperClass: PropTypes.string,\n  placeCardInfoClass: PropTypes.string,\n  imgHeight: PropTypes.string,\n  imgWidth: PropTypes.string,\n};\n\nexport { Offer };\nexport default Offer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport offersProp from '../../types/offers.prop';\nimport Offer from '../offer/offer';\n\nfunction Offers({offers, placesListClass, placeCardClass = '', imageWrapperClass = '', onActiveOfferSet = () => {}}) {\n  return (\n    <div className={`${placesListClass} places__list`}>\n      {Object.values(offers).map((offer) =>\n        (\n          <Offer\n            key={offer.id}\n            offer={offer}\n            onMouseEnter={() => onActiveOfferSet(offer.id)}\n            onMouseLeave={() => onActiveOfferSet(0)}\n            placeCardClass={placeCardClass}\n            imageWrapperClass={imageWrapperClass}\n          />\n        ))}\n    </div>\n  );\n}\n\nOffers.propTypes = {\n  offers: offersProp.isRequired,\n  placesListClass: PropTypes.string.isRequired,\n  placeCardClass: PropTypes.string,\n  imageWrapperClass: PropTypes.string,\n  onActiveOfferSet: PropTypes.func,\n};\n\nexport { Offers };\nexport default React.memo(Offers);\n","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport cityProp from '../../types/city.prop';\nimport offersProp from '../../types/offers.prop';\nimport leaflet from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nconst ICON = leaflet.icon({\n  iconUrl: 'https://vadimcpp.github.io/six-cities/img/pin.svg',\n  iconSize: [27, 39],\n});\n\nconst ICON_ACTIVE = leaflet.icon({\n  iconUrl: 'img/pin-active.svg',\n  iconSize: [27, 39],\n});\n\nfunction CitiesMap({ city, offers, className = '', activeOfferId = 0 }) {\n  const map = useRef();\n  const mapRef = useRef();\n  const markers = useRef([]);\n\n  //\n  // NOTE!\n  // Одноразово инициализировать карту\n  //\n  useEffect(() => {\n    map.current = leaflet.map(mapRef.current, {\n      center: [city.location.latitude, city.location.longitude],\n      zoom: city.location.zoom,\n      zoomControl: false,\n      marker: true,\n    });\n\n    map.current.scrollWheelZoom.disable();\n\n    leaflet\n      .tileLayer('https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}{r}.png', {\n        attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors &copy; <a href=\"https://carto.com/attributions\">CARTO</a>',\n      })\n      .addTo(map.current);\n\n    map.current.setView([ city.location.latitude, city.location.longitude ], city.location.zoom);\n\n    return () => {\n      map.current.remove();\n    };\n  }, [city]);\n\n  //\n  // NOTE!\n  // Инициализировать и отрисовать маркеры\n  //\n  useEffect(() => {\n    if (map.current) {\n      Object.values(offers).forEach((o) => {\n        const coords = [\n          o.location.latitude,\n          o.location.longitude,\n        ];\n        markers.current.push({\n          markerLayer: leaflet.marker(coords, {icon: o.id === activeOfferId ? ICON_ACTIVE : ICON}).addTo(map.current),\n          offerId: o.id,\n        });\n      });\n    }\n\n    return () => {\n      markers.current.forEach((marker) => {\n        marker.markerLayer.remove();\n      });\n      markers.current = [];\n    };\n  }, [offers, activeOfferId]);\n\n  //\n  // NOTE!\n  // Обновить маркеры\n  //\n  useEffect(() => {\n    markers.current.forEach((marker) => {\n      marker.markerLayer.setIcon(marker.offerId === activeOfferId ? ICON_ACTIVE : ICON);\n    });\n  }, [activeOfferId]);\n\n  return (\n    <section className={`${className} map`}>\n      <div\n        id=\"map\"\n        ref={mapRef}\n        style={{\n          height: '100%',\n        }}\n        data-testid=\"map\"\n      />\n    </section>\n  );\n}\n\nCitiesMap.propTypes = {\n  city: cityProp.isRequired,\n  offers: offersProp.isRequired,\n  className: PropTypes.string,\n  activeOfferId: PropTypes.number,\n};\n\nexport { CitiesMap };\nexport default React.memo(CitiesMap);\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { CITIES } from '../../const';\nimport { setCity } from '../../store/action';\nimport { getCity } from '../../store/cities-data/selector';\n\nconst cities = Object.values(CITIES);\n\nfunction Cities() {\n  const city = useSelector(getCity);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"tabs\">\n      <section className=\"locations container\">\n        <ul className=\"locations__list tabs__list\">\n          {cities.map((c) => (\n            <li className=\"locations__item\" key={c.name}>\n              <span\n                className={`locations__item-link tabs__item ${c.name === city ? 'tabs__item--active' : ''}`}\n                style={{ cursor: 'pointer' }}\n                onClick={() => {\n                  dispatch(setCity(c.name));\n                }}\n              >\n                <span>{c.name}</span>\n              </span>\n            </li>\n          ))}\n        </ul>\n      </section>\n    </div>\n  );\n}\n\nexport { Cities };\nexport default Cities;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { SortingTypes } from '../../const';\n\nconst types = Object.values(SortingTypes);\n\nfunction Sorting({ type, onSortingChange }) {\n  const [ visible, setVisible ] = useState(false);\n  return (\n    <div className=\"places__sorting\">\n      <span className=\"places__sorting-caption\">Sort by </span>\n      <span className=\"places__sorting-type\" onClick={() => setVisible(true)}>\n        {type}\n        <svg className=\"places__sorting-arrow\" width=\"7\" height=\"4\">\n          <use xlinkHref=\"#icon-arrow-select\"></use>\n        </svg>\n      </span>\n      {visible && (\n        <ul className=\"places__options places__options--custom places__options--opened\">\n          {types.map((aType, idx) => (\n            <li\n              key={aType}\n              className={`places__option ${type === aType ? 'places__option--active' : ''}`}\n              tabIndex={idx}\n              onClick={() => {\n                setVisible(false);\n                onSortingChange(aType);\n              }}\n            >\n              {aType}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nSorting.propTypes = {\n  type: PropTypes.string.isRequired,\n  onSortingChange: PropTypes.func.isRequired,\n};\n\nexport { Sorting };\nexport default React.memo(Sorting);\n","import React from 'react';\n\nfunction Spinner() {\n  return (\n    <main className=\"page__main page__main--favorites page__main--favorites-empty\">\n      <div className=\"page__favorites-container container\">\n        <section className=\"favorites favorites--empty\">\n          <div className=\"favorites__status-wrapper\">\n            <p className=\"favorites__status-description\">Загрузка...</p>\n          </div>\n        </section>\n      </div>\n    </main>\n  );\n}\n\nexport default Spinner;\n","import React, { useState, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { CITIES, SortingTypes } from '../../const';\nimport { getIsDataLoaded, getOffersForCity } from '../../store/offers-data/selector';\nimport { getCity } from '../../store/cities-data/selector';\nimport Header from '../header/header';\nimport Offers from '../offers/offers';\nimport CitiesMap from '../cities-map/cities-map';\nimport Cities from '../cities/cities';\nimport Sorting from '../sorting/sorting';\nimport Spinner from '../spinner/spinner';\n\nfunction MainScreen() {\n  const city = useSelector(getCity);\n  const theOffersForCity = useSelector(getOffersForCity);\n  const isDataLoaded = useSelector(getIsDataLoaded);\n\n  const [ sortType, setSortType ] = useState(SortingTypes.POPULAR);\n  const [ activeOfferId, setActiveOfferId ] = useState(0);\n\n  const offersForCity = useMemo(() => {\n    const offersForCityArray = [ ...theOffersForCity ];\n    switch (sortType) {\n      case SortingTypes.LOW_TO_HIGH:\n        offersForCityArray.sort((a, b) => a.price - b.price);\n        break;\n      case SortingTypes.HIGH_TO_LOW:\n        offersForCityArray.sort((a, b) => b.price - a.price);\n        break;\n      case SortingTypes.TOP_RATED:\n        offersForCityArray.sort((a, b) => b.rating - a.rating);\n        break;\n      default:\n        break;\n    }\n    return offersForCityArray;\n  }, [sortType, theOffersForCity]);\n\n  return (\n    <div className=\"page page--gray page--main\">\n      <Header />\n      {isDataLoaded && offersForCity.length > 0 && (\n        <main className=\"page__main page__main--index\">\n          <h1 className=\"visually-hidden\">Cities</h1>\n          <Cities />\n          <div className=\"cities\">\n            <div className=\"cities__places-container container\">\n              <section className=\"cities__places places\">\n                <h2 className=\"visually-hidden\">Places</h2>\n                <b className=\"places__found\">{offersForCity.length} places to stay in {city}</b>\n                <Sorting type={sortType} onSortingChange={setSortType}/>\n                <Offers\n                  offers={offersForCity}\n                  placesListClass=\"cities__places-list\"\n                  placeCardClass=\"cities__place-card\"\n                  imageWrapperClass=\"cities__image-wrapper\"\n                  onActiveOfferSet={setActiveOfferId}\n                />\n              </section>\n              <div className=\"cities__right-section\">\n                <CitiesMap city={CITIES[city]} offers={offersForCity} className=\"cities__map\" activeOfferId={activeOfferId} />\n              </div>\n            </div>\n          </div>\n        </main>\n      )}\n      {isDataLoaded && offersForCity.length === 0 && (\n        <main className=\"page__main page__main--index page__main--index-empty\">\n          <h1 className=\"visually-hidden\">Cities</h1>\n          <Cities />\n          <div className=\"cities\">\n            <div className=\"cities__places-container cities__places-container--empty container\">\n              <section className=\"cities__no-places\">\n                <div className=\"cities__status-wrapper tabs__content\">\n                  <b className=\"cities__status\">No places to stay available</b>\n                  <p className=\"cities__status-description\">We could not find any property available at the moment in {city}</p>\n                </div>\n              </section>\n              <div className=\"cities__right-section\"></div>\n            </div>\n          </div>\n        </main>\n      )}\n      {!isDataLoaded && <Spinner />}\n    </div>\n  );\n}\n\nexport { MainScreen };\nexport default MainScreen;\n","\nimport React, { useRef, useState } from 'react';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { redirectToRoute, setCity } from '../../store/action';\nimport { login } from '../../store/api-actions';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { getAuthorizationStatus } from '../../store/user-data/selector';\n\nfunction LoginScreen() {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const dispatch = useDispatch();\n\n  const loginRef = useRef();\n  const passwordRef = useRef();\n\n  const [isError, setIsError] = useState(false);\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    const password = passwordRef.current.value.trim();\n\n    if (password.length === 0) {\n      setIsError(true);\n    } else {\n      dispatch(login({\n        login: loginRef.current.value,\n        password: passwordRef.current.value,\n      }));\n    }\n  }\n\n  function handleAmsterdamClick() {\n    dispatch(setCity('Amsterdam'));\n    dispatch(redirectToRoute(AppRoute.ROOT));\n  }\n\n  return authorizationStatus === AuthorizationStatus.AUTH ? (\n    <Redirect to={AppRoute.ROOT} />\n  ) : (\n    <div className=\"page page--gray page--login\">\n      <header className=\"header\">\n        <div className=\"container\">\n          <div className=\"header__wrapper\">\n            <div className=\"header__left\">\n              <Link className=\"header__logo-link\" to={AppRoute.ROOT}>\n                <img className=\"header__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"81\" height=\"41\" />\n              </Link>\n            </div>\n            <nav className=\"header__nav\">\n              <ul className=\"header__nav-list\">\n                <li className=\"header__nav-item user\">\n                  <Link to={AppRoute.LOGIN} className=\"header__nav-link header__nav-link--profile\">\n                    <div className=\"header__avatar-wrapper user__avatar-wrapper\">\n                    </div>\n                    <span className=\"header__login\">Sign in</span>\n                  </Link>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </header>\n\n      <main className=\"page__main page__main--login\">\n        <div className=\"page__login-container container\">\n          <section className=\"login\">\n            <h1 className=\"login__title\">Sign in</h1>\n            <form\n              className=\"login__form form\"\n              action=\"\"\n              onSubmit={handleSubmit}\n            >\n              <div className=\"login__input-wrapper form__input-wrapper\">\n                <label className=\"visually-hidden\">E-mail</label>\n                <input\n                  ref={loginRef}\n                  className=\"login__input form__input\"\n                  type=\"text\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  id=\"email\"\n                />\n              </div>\n              {isError && (\n                <div className=\"login__input-wrapper form__input-wrapper\">\n                  <span style={{color: 'red'}}>\n                    No empty password allowed!\n                  </span>\n                </div>\n              )}\n              <div className=\"login__input-wrapper form__input-wrapper\">\n                <label className=\"visually-hidden\">Password</label>\n                <input\n                  ref={passwordRef}\n                  className=\"login__input form__input\"\n                  type=\"password\"\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  id=\"password\"\n                />\n              </div>\n              <button className=\"login__submit form__submit button\" type=\"submit\">Sign in</button>\n            </form>\n          </section>\n          <section className=\"locations locations--login locations--current\">\n            <div className=\"locations__item\">\n              <span\n                className=\"locations__item-link\"\n                style={{ cursor: 'pointer' }}\n                onClick={handleAmsterdamClick}\n              >\n                Amsterdam\n              </span>\n            </div>\n          </section>\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport { LoginScreen };\nexport default LoginScreen;\n","//\n// Формирует структуру такого типа:\n// [\n//   {\n//     name: \"Hamburg\",\n//     offers: [\n//       { ... },\n//       { ... },\n//       ...\n//     ],\n//   },\n//   {\n//     name: \"Cologne\",\n//     offers: [\n//       { ... },\n//       { ... },\n//       ...\n//     ],\n//   },\n//   ...\n// ];\n//\nfunction groupByCities(offers = {}) {\n  const cities = [];\n\n  Object.values(offers).forEach((o) => {\n    if (o.isFavorite) {\n      let city = cities.find((c) => c.name === o.city.name) ;\n      if (!city) {\n        city = {\n          name: o.city.name,\n          offers: [o],\n        };\n        cities.push(city);\n      } else {\n        city.offers.push(o);\n      }\n    }\n  });\n\n  return cities;\n}\n\nexport default groupByCities;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getOffers } from '../../store/offers-data/selector';\nimport { AppRoute } from '../../const';\nimport groupByCities from '../../utils/groupByCities';\nimport Offer from '../offer/offer';\n\nfunction FavoritesList() {\n  const offers = useSelector(getOffers);\n  const cities = groupByCities(offers);\n\n  return cities.length ? (\n    <section className=\"favorites\">\n      <h1 className=\"favorites__title\">Saved listing</h1>\n      <ul className=\"favorites__list\">\n        {cities.map((city) => (\n          <li className=\"favorites__locations-items\" key={city.name}>\n            <div className=\"favorites__locations locations locations--current\">\n              <div className=\"locations__item\">\n                <Link className=\"locations__item-link\" to={AppRoute.ROOT}>\n                  <span>{city.name}</span>\n                </Link>\n              </div>\n            </div>\n            <div className=\"favorites__places\">\n              {city.offers.map((offer) => (\n                <Offer\n                  key={offer.id}\n                  offer={offer}\n                  placeCardClass=\"favorites__card\"\n                  imageWrapperClass=\"favorites__image-wrapper\"\n                  placeCardInfoClass=\"favorites__card-info\"\n                  imgWidth = \"150\"\n                  imgHeight = \"110\"\n                />\n              ))}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </section>\n  ) : (\n    <section className=\"favorites favorites--empty\">\n      <h1 className=\"visually-hidden\">Favorites (empty)</h1>\n      <div className=\"favorites__status-wrapper\">\n        <b className=\"favorites__status\">Nothing yet saved.</b>\n        <p className=\"favorites__status-description\">Save properties to narrow down search or plan your future trips.</p>\n      </div>\n    </section>\n  );\n}\n\nexport default FavoritesList;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { AppRoute } from '../../const';\n\nfunction Footer() {\n  return (\n    <footer className=\"footer container\">\n      <Link className=\"footer__logo-link\" to={AppRoute.ROOT} data-testid=\"footer__logo-link\" >\n        <img className=\"footer__logo\" src=\"img/logo.svg\" alt=\"6 cities logo\" width=\"64\" height=\"33\" />\n      </Link>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport Header from '../header/header';\nimport FavoritesList from '../favorites-list/favorites-list';\nimport Footer from '../footer/footer';\n\nfunction FavoritesScreen() {\n  return (\n    <div className=\"page\">\n      <Header />\n\n      <main className=\"page__main page__main--favorites\">\n        <div className=\"page__favorites-container container\">\n          <FavoritesList />\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default FavoritesScreen;\n","function getVerboseType(type) {\n  const values = {\n    'apartment': 'Apartment',\n    'room': 'Private Room',\n    'house': 'House',\n    'hotel': 'Hotel',\n  };\n\n  return values[type] || 'Unknown';\n}\n\nexport default getVerboseType;\n","const MONTH_NAMES = [\n  'January', 'February', 'March', 'April', 'May', 'June',\n  'July', 'August', 'September', 'October', 'November', 'December',\n];\n\n//\n// Пример входного параметра: 2021-06-17T16:51:35.216Z\n//\nconst getVerboseDate = (dateString) => {\n  const aDate = new Date(dateString);\n  const verboseDate = `${MONTH_NAMES[aDate.getMonth()]} ${aDate.getFullYear()}`;\n\n  return verboseDate;\n};\n\nexport default getVerboseDate;\n","import React from 'react';\nimport reviewProp from '../../types/review.prop';\nimport { RATING_TO_PERCENT } from '../../const';\nimport getVerboseDate from '../../utils/getVerboseDate';\n\nfunction Review({ review }) {\n  const { comment, rating, user: { avatarUrl, name }, date} = review;\n\n  return (\n    <>\n      <div className=\"reviews__user user\">\n        <div className=\"reviews__avatar-wrapper user__avatar-wrapper\">\n          <img className=\"reviews__avatar user__avatar\" src={avatarUrl} width=\"54\" height=\"54\" alt={name} />\n        </div>\n        <span className=\"reviews__user-name\">\n          {name}\n        </span>\n      </div>\n      <div className=\"reviews__info\">\n        <div className=\"reviews__rating rating\">\n          <div className=\"reviews__stars rating__stars\">\n            <span style={{ width: `${rating * RATING_TO_PERCENT}%` }}></span>\n            <span className=\"visually-hidden\">Rating</span>\n          </div>\n        </div>\n        <p className=\"reviews__text\">\n          {comment}\n        </p>\n        <time className=\"reviews__time\" dateTime={date}>{getVerboseDate(date)}</time>\n      </div>\n    </>\n  );\n}\n\nReview.propTypes = {\n  review: reviewProp.isRequired,\n};\n\nexport default Review;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ReviewStar({ stars, title, onRatingChange, isChecked }) {\n  return (\n    <>\n      <input\n        className=\"form__rating-input visually-hidden\"\n        name=\"rating\"\n        value={stars}\n        id={`${stars}-stars`}\n        type=\"radio\"\n        checked={isChecked}\n        onChange={onRatingChange}\n      />\n      <label htmlFor={`${stars}-stars`} className=\"reviews__rating-label form__rating-label\" title={title}>\n        <svg className=\"form__star-image\" width=\"37\" height=\"33\">\n          <use xlinkHref=\"#icon-star\"></use>\n        </svg>\n      </label>\n    </>\n  );\n}\n\nReviewStar.propTypes = {\n  stars: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  onRatingChange: PropTypes.func.isRequired,\n  isChecked: PropTypes.bool.isRequired,\n};\n\nexport default ReviewStar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ReviewStar from '../review-star/review-star';\n\nfunction Rating({ onRatingChange, rating }) {\n  return (\n    <div className=\"reviews__rating-form form__rating\">\n      {[\n        { stars: 5, title: 'perfect' },\n        { stars: 4, title: 'good' },\n        { stars: 3, title: 'not bad' },\n        { stars: 2, title: 'badly' },\n        { stars: 1, title: 'terribly' },\n      ].map(({ stars, title }) => (\n        <ReviewStar\n          key={stars}\n          stars={stars}\n          title={title}\n          onRatingChange={onRatingChange}\n          isChecked={stars === rating}\n        />\n      ))}\n    </div>\n  );\n}\n\nRating.propTypes = {\n  onRatingChange: PropTypes.func.isRequired,\n  rating: PropTypes.number.isRequired,\n};\n\nexport default Rating;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AuthorizationStatus } from '../../const';\nimport { postComment } from '../../store/api-actions';\nimport { getAuthorizationStatus } from '../../store/user-data/selector';\nimport Rating from '../rating/rating';\n\nfunction ReviewForm({ offerId }) {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n  const dispatch = useDispatch();\n\n  const [comment, setComment] = useState('');\n  const [rating, setRating] = useState(0);\n  const [isPostingComment, setIsPostingComment] = useState(false);\n\n  if (authorizationStatus !== AuthorizationStatus.AUTH) {\n    return null;\n  }\n\n  const isSubmitAvailable = rating >= 1 && rating <= 5 && comment.length >= 50 && comment.length <= 300;\n\n  function handleCommentChange(event) {\n    if (!isPostingComment) {\n      setComment(event.target.value);\n    }\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!isPostingComment) {\n      setIsPostingComment(true);\n      dispatch(postComment({id: offerId, rating: rating, comment})).then(() => {\n        setComment('');\n        setRating(0);\n        setIsPostingComment(false);\n      });\n    }\n  }\n\n  function handleRatingChange(event) {\n    if (!isPostingComment) {\n      setRating(Number(event.currentTarget.value));\n    }\n  }\n\n  return (\n    <form className=\"reviews__form form\" onSubmit={handleSubmit}>\n      <label className=\"reviews__label form__label\" htmlFor=\"review\">Your review</label>\n      <Rating onRatingChange={handleRatingChange} rating={rating} />\n      <textarea\n        className=\"reviews__textarea form__textarea\"\n        placeholder=\"Tell how was your stay, what you like and what can be improved\"\n        value={comment}\n        onChange={handleCommentChange}\n        disabled={isPostingComment}\n      />\n      <div className=\"reviews__button-wrapper\">\n        <p className=\"reviews__help\">\n          To submit review please make sure to set\n          <span className=\"reviews__star\">rating</span>\n          and describe your stay with at least\n          <b className=\"reviews__text-amount\"> 50 </b>\n          characters and less than\n          <b className=\"reviews__text-amount\"> 300 </b>\n          characters.\n        </p>\n        <button\n          className=\"reviews__submit form__submit button\"\n          type=\"submit\"\n          disabled={!isPostingComment && isSubmitAvailable ? '' : 'disabled'}\n        >\n          Submit\n        </button>\n      </div>\n    </form>\n  );\n}\n\nReviewForm.propTypes = {\n  offerId: PropTypes.number.isRequired,\n};\n\nexport { ReviewForm };\nexport default ReviewForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport reviewsProp from '../../types/reviews.prop';\nimport Review from '../review/review';\nimport ReviewForm from '../review-form/review-form';\n\nfunction Reviews({ reviews, offerId }) {\n  return (\n    <section className=\"property__reviews reviews\">\n      <h2 className=\"reviews__title\">Reviews &middot; <span className=\"reviews__amount\">{reviews.length}</span></h2>\n      <ul className=\"reviews__list\">\n        {reviews.map((review) => (\n          <li className=\"reviews__item\" key={review.id}>\n            <Review review={review}/>\n          </li>\n        ))}\n      </ul>\n      <ReviewForm offerId={offerId} />\n    </section>\n  );\n}\n\nReviews.propTypes = {\n  reviews: reviewsProp.isRequired,\n  offerId: PropTypes.number.isRequired,\n};\n\nexport { Reviews };\nexport default React.memo(Reviews);\n","import React from 'react';\nimport userProp from '../../types/user.prop';\n\nfunction Host({ user }) {\n  return (\n    <div className=\"property__host\">\n      <h2 className=\"property__host-title\">Meet the host</h2>\n      <div className=\"property__host-user user\">\n        <div className=\"property__avatar-wrapper property__avatar-wrapper--pro user__avatar-wrapper\">\n          <img className=\"property__avatar user__avatar\" src={user.avatarUrl} width=\"74\" height=\"74\" alt=\"Host avatar\" />\n        </div>\n        <span className=\"property__user-name\">\n          {user.name}\n        </span>\n        {user.isPro && (\n          <span className=\"property__user-status\">\n            Pro\n          </span>\n        )}\n      </div>\n    </div>\n  );\n}\n\nHost.propTypes = {\n  user: userProp.isRequired,\n};\n\nexport default Host;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport offerProp from '../../types/offer.prop';\nimport getVerboseType from '../../utils/getVerboseType';\nimport { RATING_TO_PERCENT } from '../../const';\nimport { updateFavoriteStatus } from '../../store/api-actions';\nimport Reviews from '../reviews/reviews';\nimport Host from '../host/host';\n\nfunction Room({ offer }) {\n  const dispatch = useDispatch();\n\n  function handleFavoriteClick() {\n    dispatch(updateFavoriteStatus({ id: offer.id, status: offer.isFavorite ? 0 : 1 }));\n  }\n\n  const sortedReviews = [ ...(offer.reviews || []) ];\n  sortedReviews.sort((a, b) => a.date < b.date ? 1 : -1);\n\n  return (\n    <>\n      <div className=\"property__gallery-container container\">\n        <div className=\"property__gallery\">\n          {offer.images.slice(0, 6).map((image) => (\n            <div className=\"property__image-wrapper\" key={image}>\n              <img className=\"property__image\" src={image} alt=\"Studio\" />\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"property__container container\">\n        <div className=\"property__wrapper\">\n          {offer.isPremium && (\n            <div className=\"property__mark\">\n              <span>Premium</span>\n            </div>\n          )}\n          <div className=\"property__name-wrapper\">\n            <h1 className=\"property__name\">\n              {offer.title}\n            </h1>\n            <button\n              className={`property__bookmark-button ${offer.isFavorite ? 'property__bookmark-button--active' : ''} button`}\n              type=\"button\"\n              onClick={handleFavoriteClick}\n            >\n              <svg className=\"property__bookmark-icon\" width=\"31\" height=\"33\">\n                <use xlinkHref=\"#icon-bookmark\"></use>\n              </svg>\n              <span className=\"visually-hidden\">${offer.isFavorite ? 'From' : 'To '} bookmarks</span>\n            </button>\n          </div>\n          <div className=\"property__rating rating\">\n            <div className=\"property__stars rating__stars\">\n              <span style={{ width: `${offer.rating * RATING_TO_PERCENT}%` }}></span>\n              <span className=\"visually-hidden\">Rating</span>\n            </div>\n            <span className=\"property__rating-value rating__value\">{offer.rating}</span>\n          </div>\n          <ul className=\"property__features\">\n            <li className=\"property__feature property__feature--entire\">\n              {getVerboseType(offer.type)}\n            </li>\n            <li className=\"property__feature property__feature--bedrooms\">\n              {offer.bedrooms} Bedrooms\n            </li>\n            <li className=\"property__feature property__feature--adults\">\n              Max {offer.maxAdults} adults\n            </li>\n          </ul>\n          <div className=\"property__price\">\n            <b className=\"property__price-value\">&euro;{offer.price}</b>\n            <span className=\"property__price-text\">&nbsp;night</span>\n          </div>\n          <div className=\"property__inside\">\n            <h2 className=\"property__inside-title\">What&apos;s inside</h2>\n            <ul className=\"property__inside-list\">\n              {offer.goods.map((good) => (\n                <li className=\"property__inside-item\" key={good}>\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <Host user={offer.host} />\n          <div className=\"property__description\">\n            <p className=\"property__text\">\n              {offer.description}\n            </p>\n          </div>\n          <Reviews reviews={sortedReviews.slice(0,10) || []} offerId={offer.id} />\n        </div>\n      </div>\n    </>\n  );\n}\n\nRoom.propTypes = {\n  offer: offerProp,\n};\n\nexport { Room };\nexport default Room;\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchOfferData } from '../../store/api-actions';\nimport { getOffers, getIsDataLoaded } from '../../store/offers-data/selector';\nimport Header from '../header/header';\nimport Footer from '../footer/footer';\nimport CitiesMap from '../cities-map/cities-map';\nimport Offers from '../offers/offers';\nimport Room from '../room/room';\nimport Spinner from '../spinner/spinner';\n\nfunction RoomScreen() {\n  const offers = useSelector(getOffers);\n  const isDataLoaded = useSelector(getIsDataLoaded);\n  const dispatch = useDispatch();\n\n  const { id } = useParams();\n\n  const offer = offers[Number(id)];\n  const nearby = offer?.nearby || [];\n  const nearbyOffers = nearby.map((nearbyId) => offers[nearbyId]);\n\n  useEffect(() => {\n    if (!Array.isArray(offer?.nearby) || !Array.isArray(offer?.reviews))\n    {\n      dispatch(fetchOfferData(id));\n    }\n  }, [dispatch, id, offer]);\n\n  return (\n    <div className=\"page\">\n      <Header />\n      {isDataLoaded && (\n        <main className=\"page__main page__main--property\">\n          <section className=\"property\">\n            <Room offer={offer} />\n            <CitiesMap city={offer.city} offers={[...nearbyOffers, offer]} className=\"property__map\" activeOfferId={offer.id}/>\n          </section>\n          <div className=\"container\">\n            <section className=\"near-places places\">\n              <h2 className=\"near-places__title\">Other places in the neighbourhood</h2>\n              <Offers\n                offers={nearbyOffers}\n                placesListClass=\"near-places__list\"\n                placeCardClass=\"near-places__card\"\n                imageWrapperClass=\"near-places__image-wrapper\"\n              />\n            </section>\n          </div>\n        </main>\n      )}\n      {!isDataLoaded && <Spinner />}\n      <Footer />\n    </div>\n  );\n}\n\nexport { RoomScreen };\nexport default RoomScreen;\n","import React from 'react';\nimport Header from '../header/header';\nimport Footer from '../footer/footer';\n\nfunction NotFoundScreen() {\n  return (\n    <div className=\"page page--favorites-empty\">\n      <Header />\n\n      <main className=\"page__main page__main--favorites page__main--favorites-empty\">\n        <div className=\"page__favorites-container container\">\n          <section className=\"favorites favorites--empty\">\n            <h1 className=\"visually-hidden\">Favorites (empty)</h1>\n            <div className=\"favorites__status-wrapper\">\n              <b className=\"favorites__status\">404</b>\n              <p className=\"favorites__status-description\">Not Found</p>\n            </div>\n          </section>\n        </div>\n      </main>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default NotFoundScreen;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { AppRoute, AuthorizationStatus } from '../../const';\nimport { getAuthorizationStatus } from '../../store/user-data/selector';\n\nfunction PrivateRoute({ render, path, exact }) {\n  const authorizationStatus = useSelector(getAuthorizationStatus);\n\n  return (\n    <Route\n      path={path}\n      exact={exact}\n      render={(routeProps) => (\n        authorizationStatus === AuthorizationStatus.NO_AUTH\n          ? <Redirect to={AppRoute.LOGIN} />\n          : render(routeProps)\n      )}\n    />\n  );\n}\n\nPrivateRoute.propTypes = {\n  exact: PropTypes.bool.isRequired,\n  path: PropTypes.string.isRequired,\n  render: PropTypes.func.isRequired,\n};\n\nexport { PrivateRoute };\nexport default PrivateRoute;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { AppRoute } from '../../const';\nimport MainScreen from '../main-screen/main-screen';\nimport LoginScreen from '../login-screen/login-screen';\nimport FavoritesScreen from '../favorites-screen/favorites-screen';\nimport RoomScreen from '../room-screen/room-screen';\nimport NotFoundScreen from '../not-found-screen/not-found-screen';\nimport PrivateRoute from '../private-route/private-route';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path={AppRoute.ROOT} exact component={MainScreen} />\n      <Route path={AppRoute.LOGIN} exact component={LoginScreen} />\n      <Route path={AppRoute.ROOM} exact component={RoomScreen} />\n      <PrivateRoute path={AppRoute.FAVORITES} exact render={() => <FavoritesScreen />} />\n      <Route component={NotFoundScreen} />\n    </Switch>\n  );\n}\n\nexport { App };\nexport default App;\n","import axios from 'axios';\n\nconst BACKEND_URL = 'https://7.react.pages.academy/six-cities';\nconst REQUEST_TIMEOUT = 5000;\n\nconst HttpCode = {\n  UNAUTHORIZED: 401,\n};\n\nexport const createAPI = (onUnauthorized) => {\n  const api = axios.create({\n    baseURL: BACKEND_URL,\n    timeout: REQUEST_TIMEOUT,\n    header: {\n      'Content-Type': 'application/json',\n    },\n    transformRequest: [function (data, headers) {\n      //\n      // https://stackoverflow.com/a/63142745/1775459\n      //\n      headers['x-token'] = localStorage.getItem('token') ?? '';\n      return data;\n    }],\n  });\n\n  const onSuccess = (response) => response;\n\n  const onFail = (err) => {\n    const {response} = err;\n\n    if (response.status === HttpCode.UNAUTHORIZED) {\n      onUnauthorized();\n    }\n\n    throw err;\n  };\n\n  api.interceptors.response.use(onSuccess, onFail);\n\n  return api;\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\nimport {Router as BrowserRouter} from 'react-router-dom';\nimport rootReducer from './store/root-reducer';\nimport { requireAuthorization } from './store/action';\nimport { redirect } from './store/middlewares/redirect';\nimport { checkAuth, fetchOfferList } from './store/api-actions';\nimport App from './components/app/app';\nimport { createAPI } from './services/api';\nimport { AuthorizationStatus } from './const';\nimport browserHistory from './browser-history';\n\nlet store = null;\n\nconst api = createAPI(\n  () => store.dispatch(requireAuthorization(AuthorizationStatus.NO_AUTH)),\n);\n\nstore = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      thunk: {\n        extraArgument: api,\n      },\n    }).concat(redirect),\n});\n\nstore.dispatch(checkAuth());\nstore.dispatch(fetchOfferList());\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter history={browserHistory}>\n        <App/>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'));\n"],"sourceRoot":""}
